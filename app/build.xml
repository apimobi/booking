<?xml version="1.0" encoding="UTF-8"?>

<project name="Test" default="build">
    <property name="workspace" value="${basedir}" />
    <property name="sourcedir" value="${basedir}/src" />
    <property name="builddir" value="${workspace}/app/build" />

    <target name="build" depends="prepare,composer,vendors,phploc,pdepend,phpcpd,phpmd,sf2-coding-standard,phpcs,phpcb,phpunit,phpmetrics"/>
    <!-- Useless I think
    <target name="build-parallel" depends="prepare,tools-parallel,phpunit,phpcb"/>
    -->

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phploc"/>
            <antcall target="phpdoc"/>
            <antcall target="phpmetrics"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/phpcb"/>
        <delete dir="${builddir}/phpunit"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>
        <mkdir dir="${builddir}/build"/>
        <!--
        <delete includeEmptyDirs="true">
            <fileset dir="${basedir}/app/cache" includes="**/*" defaultexcludes="no"/>
        </delete>
        -->
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/phpcb"/>
        <mkdir dir="${builddir}/phpunit"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
        <mkdir dir="${builddir}/build"/>
    </target>

    <!-- PHPLOC -->
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${workspace}/bin/phploc">
            <arg value="--log-csv" />
            <arg value="${builddir}/logs/phploc.csv" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <!-- PDEPEND -->
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="${workspace}/bin/pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/pdepend.xml" />
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <!-- PHPMD -->
    <target name="phpmd" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${workspace}/bin/phpmd">
            <arg path="${sourcedir}" />
            <arg value="xml" />
            <arg value="${workspace}/app/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${builddir}/logs/pmd.xml" />
        </exec>
    </target>

    <!-- PHPCS -->
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="${workspace}/bin/phpcs">
            <arg value="--report=checkstyle" />
            <arg value="--ignore=*/Entity/*,*/Ressources/*, */Tests/*" />
            <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
            <arg value="--standard=Symfony2" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <!-- PHPCPD -->
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${workspace}/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg value="${builddir}/logs/pmd-cpd.xml" />
            <arg path="${sourcedir}" />
        </exec>
    </target>

    <!-- PHPDOC -->
    <target name="phpdoc" description="Generate API documentation using phpDox">
        <exec executable="phpdoc">
            <arg line="-d '${sourcedir}' -t '${builddir}/apidoc' --title='Brandalley Doc' " />
        </exec>
    </target>

    <!-- PHPUNIT -->
    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${workspace}/bin/phpunit" failonerror="false">
            <arg value="-c" />
            <arg path="${basedir}/app/phpunit.xml" />
        </exec>
    </target>

    <!-- PHPCB -->
    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="${workspace}/bin/phpcb">
            <arg value="--log" />
            <arg path="${builddir}/logs" />
            <arg value="--source" />
            <arg path="${sourcedir}" />
            <arg value="--output" />
            <arg path="${builddir}/phpcb" />
        </exec>
    </target>

    <!-- UPDATE COMPOSER -->
    <target name="composer" description="download composer.phar">
        <exec executable="sh" failonerror="true">
            <arg value="-c" />
            <arg value="curl -sS http://getcomposer.org/installer | php" />
        </exec>
    </target>

    <!-- UPDATE SYMFONY2 STANDARD -->
    <target name="sf2-coding-standard" description="download phpcs-standard">
        <exec executable="sh" failonerror="true">
            <arg value="-c" />
            <arg value="php -d memory_limit=1500M composer.phar run-script phpcs-standard" />
        </exec>
    </target>

    <!-- UPDATE VENDORS -->
    <target name="vendors" description="Update vendors">
        <exec executable="sh" failonerror="true">
            <arg value="-c" />
            <arg value="php -d memory_limit=1500M composer.phar update" />
        </exec>
    </target>

    <!-- COPY PARAMETERS -->
    <target name="parameters" description="Copy parameters">
        <exec executable="cp" failonerror="true">
            <arg path="app/config/parameters.jenkins.yml" />
            <arg path="app/config/parameters.yml" />
        </exec>
    </target>

    <!-- PHPMETTRICS -->
    <target name="phpmetrics" description="Gives metrics about PHP project and classes">
        <exec executable="${workspace}/bin/phpmetrics">
            <arg value="--report-xml=${builddir}/logs/phpmetrics.xml" />
            <arg value="--report-html=${builddir}/phpmetrics.html" />
            <arg path="${sourcedir}" />
        </exec>
    </target>
</project>
